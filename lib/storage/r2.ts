import { S3Client, PutObjectCommand, GetObjectCommand } from '@aws-sdk/client-s3';\nimport { getSignedUrl } from '@aws-sdk/s3-request-presigner';\nconst req=(n:string)=>{const v=process.env[n]; if(!v) throw new Error('Missing env '+n); return v};\nfunction client(){ const endpoint = https://.r2.cloudflarestorage.com; return new S3Client({ region:'auto', endpoint, credentials:{ accessKeyId:req('R2_ACCESS_KEY_ID'), secretAccessKey:req('R2_SECRET_ACCESS_KEY') } }); }\nexport async function presignPutUrl(key:string, contentType:string, expiresIn=300){ const Bucket=req('R2_BUCKET'); const url = await getSignedUrl(client(), new PutObjectCommand({Bucket, Key:key, ContentType:contentType}), {expiresIn}); return { url }; }\nexport async function presignGetUrl(key:string, expiresIn=300){ const Bucket=req('R2_BUCKET'); const url = await getSignedUrl(client(), new GetObjectCommand({Bucket, Key:key}), {expiresIn}); return { url }; }\nexport function publicUrlFor(key:string){ const base=process.env.R2_PUBLIC_BASE_URL?.replace(/\/$/,''); return base? ${base}/.replace(/\/+/, '/'): null; }
